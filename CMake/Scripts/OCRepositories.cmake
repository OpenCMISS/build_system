#[=======================================================================[.rst:
OpenCMISS repositories
----------------------

OpenCMISS files are stored in a distributed source control system on
GitHub (:url::www.github.com). To determine which repositories are
used we need to consider

.. only:: Developer

A number of CMake variables dictate how OpenCMISS repositories are
determined. The repositories are broken down into three main types:
the main OpenCMISS repository for the build system, source files,
utilities etc.; the OpenCMISS repositories for dependencies; and the
OpenCMISS repositories for examples. For user type builds these
repositories will just be the same as the default OpenCMISS
repositories. For developers, however, it is often the case that the
developer has made a fork of a repository so that they can make
changes. In this case the developer will desire to clone their version
of the OpenCMISS repositories rather than the default OpenCMISS
repositories.

#]=======================================================================]

# Setup OpenCMISS source repository information
set(OC_DEFAULT_GIT_HOST "github.com" CACHE STRING "The git hostname of the main OpenCMISS repositories." FORCE)
set(OC_DEFAULT_GIT_ORGANISATION "OpenCMISS" CACHE STRING "The git organisation at the git host of the main OpenCMISS repositories." FORCE)
set(OC_DEFAULT_GIT_BRANCH "main" CACHE STRING "The git default branch for the main OpenCMISS repositories." FORCE)
if(DEFINED OpenCMISS_DEVELOPER)
  if(OpenCMISS_DEVELOPER)
    set(OC_DEVELOPER ON CACHE BOOL "Enable an OpenCMISS developer setup." FORCE)
  else()
    set(OC_DEVELOPER OFF CACHE BOOL "Enable an OpenCMISS developer setup." FORCE)
  endif()
else()
  if(DEFINED ENV{OpenCMISS_DEVELOPER})
    string(TOLOWER "$ENV{OpenCMISS_DEVELOPER}" _LOWERCASE_OpenCMISS_DEVELOPER)
    if(_LOWERCASE_OpenCMISS_DEVELOPER STREQUAL "on")
      set(OC_DEVELOPER ON CACHE BOOL "Enable an OpenCMISS developer setup." FORCE)
    else()
      if(_LOWERCASE_OpenCMISS_DEVELOPER STREQUAL "true")
	set(OC_DEVELOPER ON CACHE BOOL "Enable an OpenCMISS developer setup." FORCE)
      else()
	set(OC_DEVELOPER OFF CACHE BOOL "Enable an OpenCMISS developer setup." FORCE)
      endif()
    endif()
  else()
    set(OC_DEVELOPER OFF CACHE BOOL "Enable an OpenCMISS developer setup." FORCE)
  endif()
endif()

if(OC_DEVELOPER)
  OCCMakeDebug("Using a developer setup for OpenCMISS." 1)
  if(DEFINED OpenCMISS_DEVELOPER_GIT_HOST)
    set(OC_DEVELOPER_GIT_HOST "${OpenCMISS_DEVELOPER_GIT_HOST}" CACHE STRING "OpenCMISS developer git hostname." FORCE)
  else()
    if(DEFINED ENV{OpenCMISS_DEVELOPER_GIT_HOST})
      set(OC_DEVELOPER_GIT_HOST "$ENV{OpenCMISS_DEVELOPER_GIT_HOST}" CACHE STRING "OpenCMISS developer git hostname." FORCE)
    else()
      set(OC_DEVELOPER_GIT_HOST "${OC_DEFAULT_GIT_HOST}" CACHE STRING "OpenCMISS developer git hostname." FORCE)
    endif()
  endif()
  if(DEFINED OpenCMISS_DEVELOPER_GIT_ORGANISATION)
    set(OC_DEVELOPER_GIT_ORGANISATION "${OpenCMISS_DEVELOPER_GIT_ORGANISATION}" CACHE STRING "OpenCMISS developer git organisation." FORCE)
  else()
    if(DEFINED ENV{OpenCMISS_DEVELOPER_GIT_ORGANISATION})
      set(OC_DEVELOPER_GIT_ORGANISATION "$ENV{OpenCMISS_DEVELOPER_GIT_ORGANISATION}" CACHE STRING "OpenCMISS developer git organisation." FORCE)
    else()
      OCCMakeFatalError("OpenCMISS_DEVELOPER is set ON but no OpenCMISS_DEVELOPER_GIT_ORGANISATION has been specified.")
    endif()
  endif()
  if(DEFINED OpenCMISS_DEVELOPER_GIT_BRANCH)
    set(OC_DEVELOPER_GIT_BRANCH "${OpenCMISS_DEVELOPER_GIT_BRANCH}" CACHE STRING "OpenCMISS developer git default branch." FORCE)
  else()
    if(DEFINED ENV{OpenCMISS_DEVELOPER_GIT_BRANCH})
      set(OC_DEVELOPER_GIT_BRANCH "$ENV{OpenCMISS_DEVELOPER_GIT_BRANCH}" CACHE STRING "OpenCMISS developer git default branch." FORCE)
    else()	
      set(OC_DEVELOPER_GIT_BRANCH "develop" CACHE STRING "OpenCMISS developer git default branch." FORCE)
    endif()
  endif()
  set(OC_GIT_HOST "${OC_DEVELOPER_GIT_HOST}" CACHE STRING "OpenCMISS git hostname." FORCE)
  set(OC_GIT_ORGANISATION "${OC_DEVELOPER_GIT_ORGANISATION}" CACHE STRING "OpenCMISS git organisation." FORCE)
  set(OC_GIT_BRANCH "${OC_DEVELOPER_GIT_BRANCH}" CACHE STRING "OpenCMISS git default branch." FORCE)
else()
  OCCMakeDebug("Using a standard setup for OpenCMISS." 1)
  set(OC_GIT_HOST "${OC_DEFAULT_GIT_HOST}" CACHE STRING "OpenCMISS git hostname." FORCE)
  set(OC_GIT_ORGANISATION "${OC_DEFAULT_GIT_ORGANISATION}" CACHE STRING "OpenCMISS git organisation." FORCE)
  set(OC_GIT_BRANCH "${OC_DEFAULT_GIT_BRANCH}" CACHE STRING "OpenCMISS git default branch." FORCE)
endif()

# Setup OpenCMISS dependencies repository information
set(OC_DEVELOPER_DEPENDENCIES OFF CACHE BOOL "Enable an OpenCMISS developer setup for dependencies." FORCE)
set(OC_DEFAULT_DEPENDENCIES_GIT_HOST "github.com" CACHE STRING "The git host of the main OpenCMISS repositories for dependencies." FORCE)
set(OC_DEFAULT_DEPENDENCIES_GIT_ORGANISATION "OpenCMISS-Dependencies2" CACHE STRING "The git organisation at the git host of the main OpenCMISS repositories for dependencies." FORCE)
set(OC_DEFAULT_DEPENDENCIES_GIT_BRANCH "opencmiss_main" CACHE STRING "The git default branch for the main OpenCMISS repositories for dependencies." FORCE)
if(DEFINED OpenCMISS_DEVELOPER_DEPENDENCIES)
  IF(OpenCMISS_DEVELOPER_DEPENDENCIES) 
    set(OC_DEVELOPER_DEPENDENCIES ON CACHE BOOL "Enable an OpenCMISS developer setup for dependencies." FORCE)
  else()
    set(OC_DEVELOPER_DEPENDENCIES OFF CACHE BOOL "Enable an OpenCMISS developer setup for dependencies." FORCE)
  endif()
else()
  if(DEFINED ENV{OpenCMISS_DEVELOPER_DEPENDENCIES})
    string(TOLOWER "$ENV{OpenCMISS_DEVELOPER_DEPENDENCIES}" _LOWERCASE_OpenCMISS_DEVELOPER_DEPENDENCIES)
    if(_LOWERCASE_OpenCMISS_DEVELOPER_DEPENDENCIES STREQUAL "on")
      set(OC_DEVELOPER_DEPENDENCIES ON CACHE BOOL "Enable an OpenCMISS developer setup for dependencies." FORCE)
    else()
      if(_LOWERCASE_OpenCMISS_DEVELOPER_DEPENDENCIES STREQUAL "true")
	set(OC_DEVELOPER_DEPENDENCIES ON CACHE BOOL "Enable an OpenCMISS developer setup for dependencies." FORCE)
      else()
	set(OC_DEVELOPER_DEPENDENCIES OFF CACHE BOOL "Enable an OpenCMISS developer setup for dependencies." FORCE)
      endif()
    endif()
  else()
    set(OC_DEVELOPER_DEPENDENCIES OFF CACHE BOOL "Enable an OpenCMISS developer setup for dependencies." FORCE)
  endif()
endif()

IF(OC_DEVELOPER_DEPENDENCIES)
  OCCMakeDebug("Using a developer setup for OpenCMISS dependencies." 1)
  if(DEFINED OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_HOST)
    set(OC_DEVELOPER_DEPENDENCIES_GIT_HOST "${OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_HOST}" CACHE STRING "OpenCMISS developer dependencies git hostname." FORCE)
  else()
    if(DEFINED ENV{OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_HOST})
    set(OC_DEVELOPER_DEPENDENCIES_GIT_HOST "$ENV{OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_HOST}" CACHE STRING "OpenCMISS developer dependencies git hostname." FORCE)
    else()
      set(OC_DEVELOPER_DEPENDENCIES_GIT_HOST "${OC_DEFAULT_DEPENDENCIES_GIT_HOST}" CACHE STRING "OpenCMISS developer dependencies git hostname." FORCE)
    endif()
  endif()
  if(DEFINED OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION)
    set(OC_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION "${OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION}" CACHE STRING "OpenCMISS developer dependencies git organisation." FORCE)
  else()
    if(DEFINED ENV{OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION})
      set(OC_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION "$ENV{OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION}" CACHE STRING "OpenCMISS developer dependencies git organisation." FORCE)
    else()
      OCCMakeFatalError("OpenCMISS_DEVELOPER_DEPENDENCIES is set on but no OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION has been specified.")
    endif()
  endif()
  if(DEFINED OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_BRANCH)
    set(OC_DEVELOPER_DEPENDENCIES_GIT_BRANCH "${OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_BRANCH}" CACHE STRING "OpenCMISS developer dependencies git default branch." FORCE)
  else()
    if(DEFINED ENV{OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_BRANCH})
      set(OC_DEVELOPER_DEPENDENCIES_GIT_BRANCH "$ENV{OpenCMISS_DEVELOPER_DEPENDENCIES_GIT_BRANCH}" CACHE STRING "OpenCMISS developer dependencies git default branch." FORCE)
    else()
      set(OC_DEVELOPER_DEPENDENCIES_GIT_BRANCH "opencmiss_develop")
    endif()
  endif()
  set(OC_DEPENDENCIES_GIT_HOST ${OC_DEVELOPER_DEPENDENCIES_GIT_HOST} CACHE STRING "OpenCMISS dependencies git host." FORCE)
  set(OC_DEPENDENCIES_GIT_ORGANISATION ${OC_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION} CACHE STRING "OpenCMISS dependencies git organisation." FORCE)
  set(OC_DEPENDENCIES_GIT_BRANCH ${OC_DEVELOPER_DEPENDENCIES_GIT_BRANCH} CACHE STRING "OpenCMISS dependencies git default branch." FORCE)
else()
  OCCMakeDebug("Using a standard setup for OpenCMISS dependencies." 1)
  set(OC_DEPENDENCIES_GIT_HOST ${OC_DEFAULT_DEPENDENCIES_GIT_HOST} CACHE STRING "OpenCMISS dependencies git host." FORCE)
  set(OC_DEPENDENCIES_GIT_ORGANISATION ${OC_DEFAULT_DEPENDENCIES_GIT_ORGANISATION} CACHE STRING "OpenCMISS dependencies git organisation." FORCE)
  set(OC_DEPENDENCIES_GIT_BRANCH ${OC_DEFAULT_DEPENDENCIES_GIT_BRANCH} CACHE STRING "OpenCMISS dependencies git default branch." FORCE)
endif()

# Setup OpenCMISS examples repository information
set(OC_DEFAULT_EXAMPLES_GIT_HOST "github.com" CACHE STRING "The git hostname of the main OpenCMISS examples repositories." FORCE)
set(OC_DEFAULT_EXAMPLES_GIT_ORGANISATION "OpenCMISS-Examples" CACHE STRING "The git organisation at the git host of the main OpenCMISS examples repositories." FORCE)
set(OC_DEFAULT_EXAMPLES_GIT_BRANCH "main" CACHE STRING "The git default branch for the main OpenCMISS examples repositories." FORCE)
if(DEFINED OpenCMISS_EXAMPLES_GIT_HOST)
  set(OC_EXAMPLES_GIT_HOST "${OpenCMISS_EXAMPLES_GIT_HOST}" CACHE STRING "OpenCMISS examples git hostname." FORCE)
else()
  if(DEFINED ENV{OpenCMISS_EXAMPLES_GIT_HOST})
    set(OC_EXAMPLES_GIT_HOST "$ENV{OpenCMISS_EXAMPLES_GIT_HOST}" CACHE STRING "OpenCMISS examples git hostname." FORCE)
  else()
    set(OC_EXAMPLES_GIT_HOST "${OC_DEFAULT_EXAMPLES_GIT_HOST}" CACHE STRING "OpenCMISS examples git hostname." FORCE)
  endif()
endif()
if(DEFINED OpenCMISS_EXAMPLES_GIT_ORGANISATION)
  set(OC_EXAMPLES_GIT_ORGANISATION "${OpenCMISS_EXAMPLES_GIT_ORGANISATION}" CACHE STRING "OpenCMISS examples git organisation." FORCE)
else()
  if(DEFINED ENV{OpenCMISS_EXAMPLES_GIT_ORGANISATION})
    set(OC_EXAMPLES_GIT_ORGANISATION "$ENV{OpenCMISS_EXAMPLES_GIT_ORGANISATION}" CACHE STRING "OpenCMISS examples git organisation." FORCE)
  else()
    set(OC_EXAMPLES_GIT_ORGANISATION "${OC_DEFAULT_EXAMPLES_GIT_ORGANISATION}" CACHE STRING "OpenCMISS examples git organisation." FORCE)
  endif()
endif()
if(DEFINED OpenCMISS_EXAMPLES_GIT_BRANCH)
  set(OC_EXAMPLES_GIT_BRANCH "${OpenCMISS_EXAMPLES_GIT_BRANCH}" CACHE STRING "OpenCMISS examples git default branch." FORCE)
else()
  if(DEFINED ENV{OpenCMISS_EXAMPLES_GIT_BRANCH})
    set(OC_EXAMPLES_GIT_BRANCH "$ENV{OpenCMISS_EXAMPLES_GIT_BRANCH}" CACHE STRING "OpenCMISS examples git default branch." FORCE)
  else()
    if(OC_DEVELOPER)
      set(OC_EXAMPLES_GIT_BRANCH "develop" CACHE STRING "OpenCMISS examples git default branch." FORCE)
    else()
      set(OC_EXAMPLES_GIT_BRANCH "${OC_DEFAULT_EXAMPLES_GIT_BRANCH}" CACHE STRING "OpenCMISS examples git default branch." FORCE)
    endif()
  endif()
endif()

OCCMakeDebug("OC_DEVELOPER: '${OC_DEVELOPER}'." 2)
OCCMakeDebug("OC_DEFAULT_GIT_HOST: '${OC_DEFAULT_GIT_HOST}'." 2)
OCCMakeDebug("OC_DEFAULT_GIT_ORGANISATION: '${OC_DEFAULT_GIT_ORGANISATION}'." 2)
OCCMakeDebug("OC_DEFAULT_GIT_BRANCH: '${OC_DEFAULT_GIT_BRANCH}'." 2)
if(OC_DEVELOPER)
  OCCMakeDebug("OC_DEVELOPER_GIT_HOST: '${OC_DEVELOPER_GIT_HOST}'." 2)
  OCCMakeDebug("OC_DEVELOPER_GIT_ORGANISATION: '${OC_DEVELOPER_GIT_ORGANISATION}'." 2)
  OCCMakeDebug("OC_DEVELOPER_GIT_BRANCH: '${OC_DEVELOPER_GIT_BRANCH}'." 2)
endif()
OCCMakeDebug("OC_GIT_HOST: '${OC_GIT_HOST}'." 2)
OCCMakeDebug("OC_GIT_ORGANISATION: '${OC_GIT_ORGANISATION}'." 2)
OCCMakeDebug("OC_GIT_BRANCH: '${OC_GIT_BRANCH}'." 2)
OCCMakeDebug("OC_DEVELOPER_DEPENDENCIES: '${OC_DEVELOPER_DEPENDENCIES}'." 2)
OCCMakeDebug("OC_DEFAULT_DEPENDENCIES_GIT_HOST: '${OC_DEFAULT_DEPENDENCIES_GIT_HOST}'." 2)
OCCMakeDebug("OC_DEFAULT_DEPENDENCIES_GIT_ORGANISATION: '${OC_DEFAULT_DEPENDENCIES_GIT_ORGANISATION}'." 2)
OCCMakeDebug("OC_DEFAULT_DEPENDENCIES_GIT_BRANCH: '${OC_DEFAULT_DEPENDENCIES_GIT_BRANCH}'." 2)
if(OC_DEVELOPER_DEPENDENCIES)
  OCCMakeDebug("OC_DEVELOPER_DEPENDENCIES_GIT_HOST: '${OC_DEVELOPER_DEPENDENCIES_GIT_HOST}'." 2)
  OCCMakeDebug("OC_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION: '${OC_DEVELOPER_DEPENDENCIES_GIT_ORGANISATION}'." 2)
  OCCMakeDebug("OC_DEVELOPER_DEPENDENCIES_GIT_BRANCH: '${OC_DEVELOPER_DEPENDENCIES_GIT_BRANCH}'." 2)
endif()
OCCMakeDebug("OC_DEPENDENCIES_GIT_HOST: '${OC_GIT_HOST}'." 2)
OCCMakeDebug("OC_DEPENDENCIES_GIT_ORGANISATION: '${OC_GIT_ORGANISATION}'." 2)
OCCMakeDebug("OC_DEPENDENCIES_GIT_BRANCH: '${OC_GIT_BRANCH}'." 2)
OCCMakeDebug("OC_DEFAULT_EXAMPLES_GIT_HOST: '${OC_DEFAULT_EXAMPLES_GIT_HOST}'." 2)
OCCMakeDebug("OC_DEFAULT_EXAMPLES_GIT_ORGANISATION: '${OC_DEFAULT_EXAMPLES_GIT_ORGANISATION}'." 2)
OCCMakeDebug("OC_DEFAULT_EXAMPLES_GIT_BRANCH: '${OC_DEFAULT_EXAMPLES_GIT_BRANCH}'." 2)
OCCMakeDebug("OC_EXAMPLES_GIT_HOST: '${OC_EXAMPLES_GIT_HOST}'." 2)
OCCMakeDebug("OC_EXAMPLES_GIT_ORGANISATION: '${OC_EXAMPLES_GIT_ORGANISATION}'." 2)
OCCMakeDebug("OC_EXAMPLES_GIT_BRANCH: '${OC_EXAMPLES_GIT_BRANCH}'." 2)

unset(_LOWERCASE_OpenCMISS_DEVELOPER)
unset(_LOWERCASE_OpenCMISS_DEVELOPER_DEPENDENCIES)
